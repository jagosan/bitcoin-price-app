apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitcoin-price-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bitcoin-price-frontend
  template:
    metadata:
      labels:
        app: bitcoin-price-frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx non-root user
        fsGroup: 101
      containers:
      - name: bitcoin-price-frontend
        image: us-central1-docker.pkg.dev/jmacleod-42/bitcoin-price-repo/frontend:latest
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-pid
          mountPath: /var/run
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-pid
        emptyDir: {}
      - name: nginx-conf
        configMap:
          name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: bitcoin-price-frontend
spec:
  selector:
    app: bitcoin-price-frontend
  ports:
  - port: 80
    targetPort: 8080
    name: http
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf: |
    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        
        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass http://bitcoin-price-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    } 